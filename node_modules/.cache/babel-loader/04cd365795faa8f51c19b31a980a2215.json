{"ast":null,"code":"var _jsxFileName = \"/Users/Vadim/Desktop/React/confusion/src/components/DishDetailComponent.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardImg, CardText, CardBody, CardTitle } from \"reactstrap\";\n\nclass DishDetail extends Component {\n  renderComments(SelectedDish) {\n    if (SelectedDish == null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 21\n        }\n      });\n    } else {\n      const comments = SelectedDish.map(review => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: review.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }\n        }, review.comment), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }\n        }, \"-- \", review.author, \" , \", new Intl.DateTimeFormat(\"en-US\", {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"2-digit\"\n        }).format(new Date(review.date))));\n      });\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-unstyled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, \"Comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-unstyled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, comments));\n    }\n  }\n\n  renderDish(dish) {\n    if (dish != null) {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"col-12 col-md-5 m-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardImg, {\n        src: dish.image,\n        alt: dish.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }\n      }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, dish.description)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n  /*render() {\r\n  \tconst dish = this.props.dish;\r\n  \tif (dish != null) {\r\n  \t\treturn (\r\n  \t\t\t<div className=\"row\">\r\n  \t\t\t\t<div className=\"col-12 col-md-5 m-1\">\r\n  \t\t\t\t\t<Card>\r\n  \t\t\t\t\t\t<CardImg top src={dish.image} alt={dish.name} />\r\n  \t\t\t\t\t\t<CardBody>\r\n  \t\t\t\t\t\t\t<CardTitle><h5>{dish.name}</h5></CardTitle>\r\n  \t\t\t\t\t\t\t<CardText>{dish.description}</CardText>\r\n  \t\t\t\t\t\t</CardBody>\r\n  \t\t\t\t\t</Card>\r\n  \t\t\t\t</div>\r\n  \n  \t\t\t\t<div className=\"col-12 col-md-5 m-1\">\r\n  \t\t\t\t\t<h4>Comments</h4>\r\n  \t\t\t\t\t<ul className=\"list-unstyled\">\r\n  \t\t\t\t\t{dish.comments.map((comment) => {\r\n  \t\t\t\t\t\treturn (\r\n  \t\t\t\t\t\t\t<li key={comment.id}>\r\n  \t\t\t\t\t\t\t\t<p>{comment.comment}</p>\r\n  \t\t\t\t\t\t\t\t<p>-- {comment.author} , {new Intl.DateTimeFormat(\"en-US\", {year: \"numeric\", month: \"short\", day: \"2-digit\"}).format(new Date(comment.date))}</p>\r\n  \t\t\t\t\t\t\t</li>\r\n  \t\t\t\t\t\t);\r\n  \t\t\t\t\t})}\r\n  \t\t\t\t\t</ul>\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n  \t\t);\r\n  \t} \r\n  \telse \r\n  \t\treturn(\r\n  \t\t\t<div></div>\r\n  \t\t);\r\n  }*/\n\n\n  render() {\n    const dish = this.props.dish;\n\n    if (dish != null) {\n      const dishItem = this.renderDish(dish);\n      const commentItem = this.renderComments(dish.comments);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 5\n        }\n      }, dishItem, \",\", commentItem);\n    } else return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }\n    });\n  }\n\n}\n\nexport default DishDetail;","map":{"version":3,"sources":["/Users/Vadim/Desktop/React/confusion/src/components/DishDetailComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","DishDetail","renderComments","SelectedDish","comments","map","review","id","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","date","renderDish","dish","image","name","description","render","props","dishItem","commentItem"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Card, CardImg, CardText, CardBody, CardTitle } from \"reactstrap\";\r\n\r\nclass DishDetail extends Component {\r\n\trenderComments(SelectedDish){\r\n        if (SelectedDish == null){\r\n            return (<div></div>);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n            const comments = SelectedDish.map(review =>{\r\n                return(\r\n                    <li key = {review.id}>\r\n                        <p>{review.comment}</p> \r\n                        <p>-- {review.author} , {new Intl.DateTimeFormat(\"en-US\", {year: \"numeric\", month: \"short\", day: \"2-digit\"}).format(new Date(review.date))}</p>\r\n                    </li>\r\n                );\r\n\r\n            });\r\n            return(\r\n                <ul className=\"list-unstyled\">\r\n                    <h4>Comments</h4>\r\n                    <ul className = \"list-unstyled\">\r\n                        {comments}\r\n                    </ul>\r\n                </ul>\r\n            );\r\n        }\r\n    }\r\n\r\n\trenderDish(dish){\r\n        if (dish != null){\r\n            return (\r\n                <Card className = \"col-12 col-md-5 m-1\">\r\n                    <CardImg src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n\t\t}\r\n\t\telse {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n\t/*render() {\r\n\t\tconst dish = this.props.dish;\r\n\t\tif (dish != null) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-12 col-md-5 m-1\">\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<CardImg top src={dish.image} alt={dish.name} />\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<CardTitle><h5>{dish.name}</h5></CardTitle>\r\n\t\t\t\t\t\t\t\t<CardText>{dish.description}</CardText>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"col-12 col-md-5 m-1\">\r\n\t\t\t\t\t\t<h4>Comments</h4>\r\n\t\t\t\t\t\t<ul className=\"list-unstyled\">\r\n\t\t\t\t\t\t{dish.comments.map((comment) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li key={comment.id}>\r\n\t\t\t\t\t\t\t\t\t<p>{comment.comment}</p>\r\n\t\t\t\t\t\t\t\t\t<p>-- {comment.author} , {new Intl.DateTimeFormat(\"en-US\", {year: \"numeric\", month: \"short\", day: \"2-digit\"}).format(new Date(comment.date))}</p>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} \r\n\t\telse \r\n\t\t\treturn(\r\n\t\t\t\t<div></div>\r\n\t\t\t);\r\n\t}*/\r\n\r\n\trender() {\r\n\t\tconst dish = this.props.dish;\r\n\t\tif (dish != null) {\r\n\t\t\tconst dishItem =  this.renderDish(dish);\r\n        \tconst commentItem = this.renderComments(dish.comments);\r\n\t\t\treturn (\r\n\t\t\t\t<div className = \"row\">\r\n\t\t\t\t{dishItem},\r\n                {commentItem}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} \r\n\t\telse \r\n\t\t\treturn (\r\n\t\t\t\t<div></div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}