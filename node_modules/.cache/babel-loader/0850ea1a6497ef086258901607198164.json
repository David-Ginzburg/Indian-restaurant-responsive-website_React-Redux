{"ast":null,"code":"var _jsxFileName = \"/Users/Vadim/Desktop/React/confusion/src/components/DishdetailComponent.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Label } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    console.log('Current State is: ' + JSON.stringify(values));\n    alert('Current State is: ' + JSON.stringify(values));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-pencil fa-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 53\n      }\n    }), \" Submit Comment\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n      className: \"mr-2 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Rating\"), /*#__PURE__*/React.createElement(Control.select, {\n      model: \".rating\",\n      name: \"rating\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }\n    }, \"5\"))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Your Name\"), /*#__PURE__*/React.createElement(Control.text, {\n      model: \".author\",\n      id: \"author\",\n      name: \"author\",\n      placeholder: \"Your Name\",\n      className: \"form-control\",\n      validators: {\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".author\",\n      show: \"touched\",\n      messages: {\n        minLength: 'Must be greater than 2 characters',\n        maxLength: 'Must be 15 characters or less'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Control.textarea, {\n      model: \".comment\",\n      id: \"comment\",\n      name: \"comment\",\n      rows: \"6\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, \"Submit\"))))));\n  }\n\n}\n\nfunction RenderComments({\n  comments,\n  addComment,\n  dishId\n}) {\n  if (comments != null) {\n    const commentsList = comments.map(review => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: review.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, review.comment), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, \"-- \", review.author, \" , \", new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"2-digit\"\n      }).format(new Date(Date.parse(review.date)))));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }\n    }, commentsList), /*#__PURE__*/React.createElement(CommentForm, {\n      dishId: dishId,\n      addComment: addComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }\n    }));\n  } else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction RenderDish({\n  dish\n}) {\n  if (dish != null) {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      width: \"100%\",\n      src: dish.image,\n      alt: dish.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 18\n      }\n    }, dish.name)), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, dish.description)));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    });\n  }\n}\n\nconst DishDetail = props => {\n  const dish = props.dish;\n\n  if (dish != null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 24\n      }\n    }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 8\n      }\n    }, props.dish.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 8\n      }\n    }, props.dish.name), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 8\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RenderDish, {\n      dish: props.dish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RenderComments, {\n      comments: props.comments,\n      addComment: props.addComment,\n      dishId: props.dish.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }))));\n  } else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default DishDetail;","map":{"version":3,"sources":["/Users/Vadim/Desktop/React/confusion/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","Breadcrumb","BreadcrumbItem","Button","Modal","ModalHeader","ModalBody","Row","Label","Control","LocalForm","Errors","Link","maxLength","len","val","length","minLength","CommentForm","constructor","props","state","isModalOpen","toggleModal","bind","handleSubmit","setState","values","console","log","JSON","stringify","alert","render","RenderComments","comments","addComment","dishId","commentsList","map","review","id","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","dish","image","name","description","DishDetail"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\r\n\t Button, Modal, ModalHeader, ModalBody, Row, Label } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n\tclass CommentForm extends Component {\r\n\t\tconstructor(props) {\r\n\t\t\tsuper(props);\r\n\t\t  \r\n\t\t\tthis.state = {\r\n\t\t\t\tisModalOpen: false\r\n\t\t\t};\r\n\t\t\r\n\t\t\tthis.toggleModal = this.toggleModal.bind(this);\r\n\t\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\ttoggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n\thandleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n    }\r\n\r\n\trender (){\r\n\t\treturn (\r\n\t\t\t<div>\r\n      \t\t\t<Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n\t\t\t\t<Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody className=\"mr-2 ml-2\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\t\t\t\t\t\t\t<Row className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<Label htmlFor=\"rating\">Rating</Label>\r\n\t\t\t\t\t\t\t\t<Control.select model=\".rating\" name=\"rating\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\">\r\n\t\t\t\t\t\t\t\t\t<option>1</option>\r\n\t\t\t\t\t\t\t\t\t<option>2</option>\r\n\t\t\t\t\t\t\t\t\t<option>3</option>\r\n\t\t\t\t\t\t\t\t\t<option>4</option>\r\n\t\t\t\t\t\t\t\t\t<option>5</option>\r\n\t\t\t\t\t\t\t\t</Control.select>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<Label htmlFor=\"author\">Your Name</Label>\r\n\t\t\t\t\t\t\t\t<Control.text model=\".author\" id=\"author\" name=\"author\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Your Name\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tvalidators={{minLength: minLength(3), maxLength: maxLength(15)}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Errors\r\n\t\t\t\t\t\t\t\t\tclassName=\"text-danger\"\r\n\t\t\t\t\t\t\t\t\tmodel=\".author\"\r\n\t\t\t\t\t\t\t\t\tshow=\"touched\"\r\n\t\t\t\t\t\t\t\t\tmessages={{\r\n\t\t\t\t\t\t\t\t\t\tminLength: 'Must be greater than 2 characters',\r\n\t\t\t\t\t\t\t\t\t\tmaxLength: 'Must be 15 characters or less'\r\n\t\t\t\t\t\t\t\t\t}}\r\n                                />\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n\t\t\t\t\t\t\t<Label htmlFor=\"comment\">Comment</Label>\r\n\t\t\t\t\t\t\t\t<Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n\t\t\t\t\t\t\t\t\trows=\"6\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\t\t\t/>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\tfunction RenderComments({comments, addComment, dishId}) {\r\n        if (comments != null) {\r\n            const commentsList = comments.map(review => {\r\n                return (\r\n                    <li key = {review.id}>\r\n                        <p>{review.comment}</p> \r\n                        <p>-- {review.author} , {new Intl.DateTimeFormat(\"en-US\", {year: \"numeric\", month: \"short\", day: \"2-digit\"}).format(new Date(Date.parse(review.date)))}</p>\r\n                    </li>\r\n                );\r\n            });\r\n            return (\r\n\t\t\t\t<React.Fragment>\r\n                    <h4>Comments</h4>\r\n\t\t\t\t\t<ul className=\"list-unstyled\">\r\n\t\t\t\t\t\t{commentsList}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<CommentForm dishId={dishId} addComment={addComment} />\r\n\t\t\t\t</React.Fragment>\r\n            );\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn (\r\n\t\t\t\t<div></div>\r\n\t\t\t);\r\n    }\r\n\r\n\tfunction RenderDish({dish}) {\r\n        if (dish != null) {\r\n            return (\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<CardTitle><h5>{dish.name}</h5></CardTitle>\r\n\t\t\t\t\t\t<CardText>{dish.description}</CardText>\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t</Card>\r\n            );\r\n\t\t}\r\n\t\telse {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n\tconst DishDetail = (props) => {\r\n\t\tconst dish = props.dish;\r\n\t\tif (dish != null) {\r\n\t\t\treturn (\r\n                <div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<Breadcrumb>\r\n\t\t\t\t\t\t\t<BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n\t\t\t\t\t\t\t<BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n\t\t\t\t\t\t</Breadcrumb>\r\n\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t<h3>{props.dish.name}</h3>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</div>                \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-12 col-md-5 m-1\">\r\n\t\t\t\t\t\t\t<RenderDish dish={props.dish} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-12 col-md-5 m-1\">\r\n\t\t\t\t\t\t<RenderComments comments={props.comments}\r\n\t\t\t\t\t\t\taddComment={props.addComment}\r\n\t\t\t\t\t\t\tdishId={props.dish.id}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n                </div>\r\n            );\r\n\t\t} \r\n\t\telse \r\n\t\t\treturn (\r\n\t\t\t\t<div></div>\r\n\t\t\t);\r\n\t}\r\n\r\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}